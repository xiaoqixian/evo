// -*- C++ -*-
// Date:   Sat May 10 15:52:30 2025
// Mail:   lunar_ubuntu@qq.com
// Author: https://github.com/xiaoqixian

#pragma once

#ifndef NDEBUG

#include <iostream>
#include <fmt/format.h>

#endif


namespace {
constexpr const char* __debug_get_filename(const char* path) {
  const char* filename = path;
  for (const char* p = path; *p; ++p) {
    if (*p == '/') {
      filename = p + 1;
    }
  }
  return filename;
}
}
namespace evo {

#ifndef NDEBUG

#define LOG_TRACE(fmt_str, ...) do {\
  std::cout << __debug_get_filename(__FILE__) << ':' << __LINE__ << ' ' << (fmt::format(fmt_str, ##__VA_ARGS__)) << '\n';\
} while (0);

#define LOG_FATAL(fmt_str, ...) do {\
  std::cerr << "\033[31mERROR: " << __debug_get_filename(__FILE__) << ':' << __LINE__ << ' ' << (fmt::format(fmt_str, ##__VA_ARGS__)) << "\033[0m\n"; \
  std::terminate();\
} while (0);

#define DEBUG_ASSERT(cond, fmt_str, ...) do {\
  if (!(cond)) {\
    LOG_FATAL(fmt_str, ##__VA_ARGS__);\
  }\
} while (0);

#else

#define LOG_TRACE(fmt_str, ...) ((void)0)
#define DEBUG_ASSERT(cond, fmt_str, ...) ((void)0)

#endif

} // namespace evo
