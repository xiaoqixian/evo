// -*- C++ -*-
// Date:   Sat May 10 20:42:47 2025
// Mail:   lunar_ubuntu@qq.com
// Author: https://github.com/xiaoqixian

#pragma once

#include <coroutine>

namespace evo::coro {

class RawTask;

class TaskScheme {
public:
  virtual void run() = 0;
};

class RawTask {
  TaskScheme* task_ {nullptr};

public:
  RawTask(TaskScheme* task) noexcept: task_(task) {}

  inline void run() {
    task_->run();
  }
};

class HandleTask: public TaskScheme {
  std::coroutine_handle<> handle_;
public:
  HandleTask(std::coroutine_handle<> h) noexcept: handle_(h) {}

  void run() override {
    if (handle_ != nullptr && !handle_.done()) handle_.resume();
  }
};

} // namespace evo::coro
