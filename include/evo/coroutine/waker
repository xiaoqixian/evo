// -*- C++ -*-
// Date:   Mon May 05 15:30:31 2025
// Mail:   lunar_ubuntu@qq.com
// Author: https://github.com/xiaoqixian

#pragma once

#include "evo/macros"
#include <coroutine>
#include <utility>
#include "evo/coroutine/scheduler"

namespace evo::coro {

class Waker {
  std::coroutine_handle<> handle_;
  LocalScheduler scheduler_;
public:
  Waker(std::coroutine_handle<> h): handle_(h) {}

  Waker(Waker && other): handle_(std::exchange(other.handle_, nullptr)) {}

  ~Waker() {
    if (handle_ != nullptr) {
      FATAL("Waker should not be destroyed with a non-nullptr handle");
    }
  }

  void wake() {
    if (handle_ != nullptr) {
      scheduler_.schedule(handle_);
      handle_ = nullptr;
    }
  }
};

} // namespace evo::coro
