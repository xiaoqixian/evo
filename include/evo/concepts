// -*- C++ -*-
// Date:   Tue Feb 27 16:14:49 2024
// Mail:   lunar_ubuntu@qq.com
// Author: https://github.com/xiaoqixian

#ifndef _CONCEPTS_H
#define _CONCEPTS_H

#if __cplusplus >= 202002L

#include "evo/type_traits"

namespace evo {

namespace concepts {

template <typename T, typename... Args>
concept constructible = evo::is_constructible_v<T, Args...>;

template <typename T, typename U>
concept assignable = evo::is_assignable_v<T, U>;

template <typename T>
concept copy_constructible = evo::is_copy_assignable_v<T>;

template <typename T>
concept move_constructible = evo::is_move_constructible_v<T>;

template <typename T>
concept default_constructible = evo::is_default_constructible_v<T>;

template <typename T>
concept move_assignable = evo::is_move_assignable_v<T>;

template <typename T, typename U>
concept same_as = evo::is_same_v<T, U>;

template <typename From, typename To>
concept convertible_to = evo::is_constructible_v<From, To> &&
    requires {
        static_cast<To>(declval<From>());
    };

} // namespace concepts

} // namespace evo

#endif

#endif // _CONCEPTS_H
