// -*- C++ -*-
// Date: Thu Jan 25 15:46:55 2024
// Mail: lunar_ubuntu@qq.com
// Author: https://github.com/xiaoqixian

#ifndef _EXECUTION_H
#define _EXECUTION_H

#include "evo/type_traits"

namespace evo {

namespace execution {

template <typename P, typename E, typename... Vs>
concept LazyPromise = 
requires(P& p, E&& e, Vs&&... vs) {
  p.set_value( (Vs&&) vs... );
  p.set_exception( (E&&) e );
  p.set_done();
};

template <typename P, typename E = void>
concept Receiver = 
requires(P&& p, E&& e) {
  p.set_error( (E&&)e );
  p.set_done();
};

template <typename P, typename... Vs>
concept ReceiverOf = 
Receiver<P> &&
requires(P&& p, Vs&&... vs) {
  p.set_value( (Vs&&) vs... );
};

template <typename F, typename R>
concept LazyFuture = 
Receiver<R> &&
requires(F&& f, R&& r) {
  evo::forward<F>(f)( (R&&)r );
};

}

}

#endif // _EXECUTION_H
