// -*- C++ -*-
// Date:   Sat May 03 20:30:55 2025
// Mail:   lunar_ubuntu@qq.com
// Author: https://github.com/xiaoqixian

#pragma once

#include <cassert>
#include <fmt/format.h>
#include <iostream>

namespace evo {

namespace {
constexpr const char* __debug_get_filename(const char* path) {
  const char* filename = path;
  for (const char* p = path; *p; ++p) {
    if (*p == '/') {
      filename = p + 1;
    }
  }
  return filename;
}
}

#define UNIMPLEMENTED() do {\
  fmt::println("UNIMPLEMENTED");\
  std::terminate();\
} while (0);

#define FATAL(fmt_str, ...) do {\
  std::cerr << "\033[31mERROR: " << __debug_get_filename(__FILE__) << "-" << __LINE__ << ": " << (fmt::format(fmt_str, ##__VA_ARGS__)) << "\033[0m\n"; \
  std::terminate();                                 \
} while (0);

#define ERROR(fmt_str, ...) do {\
  throw std::runtime_error(fmt::format(fmt_str, ##__VA_ARGS__));\
} while (0);

#define SYS_ERROR(name) do {\
  throw std::runtime_error(fmt::format(#name " failed: {}", std::strerror(errno)));\
} while (0);

} // namespace evo
